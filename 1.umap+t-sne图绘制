# =============================================
# scRNA-seq数据UMAP和t-SNE可视化 - 高质量图像输出
# =============================================
###来偷学啦?
# 加载必要的库
library(Seurat)
library(ggplot2)
library(dplyr)
library(qs)

# 设置工作目录并加载数据
setwd("/disk192/users_dir/buyu/1.布宇/3.布宇scATAC-seq/signac/流程1")
rna_data <- qs::qread("rna_final_annotated_new.qs")

# 检查数据
print("数据维度:")
print(dim(rna_data))
print("元数据列名:")
print(head(colnames(rna_data@meta.data)))
print("细胞类型分布:")
print(table(rna_data$celltype_new))

# =============================================
# 定义可视化函数
# =============================================

# UMAP绘图函数
plot_modern_umap <- function(seurat_obj, group_by = "seurat_clusters", 
                            pt_size = 0.5, alpha = 1.0, 
                            colors = NULL, label = TRUE, 
                            downsample = FALSE, max_cells = 10000) {
  
  # 提取UMAP坐标  
  umap_data <- as.data.frame(seurat_obj[["umap"]]@cell.embeddings)
  # 添加分组信息
  umap_data$group <- seurat_obj@meta.data[[group_by]]
  
  # 可选的下采样
  if(downsample && nrow(umap_data) > max_cells) {
    set.seed(42)
    cells_per_group <- table(umap_data$group)
    downsample_data <- data.frame()
    
    for(g in unique(umap_data$group)) {
      group_data <- umap_data[umap_data$group == g,]
      sample_size <- min(cells_per_group[g], max_cells/length(unique(umap_data$group)))
      if(nrow(group_data) > sample_size) {
        group_data <- group_data[sample(nrow(group_data), sample_size),]
      }
      downsample_data <- rbind(downsample_data, group_data)
    }
    umap_data <- downsample_data
  }
  
  # 如果没有指定颜色，使用默认配色方案
  if(is.null(colors)) {
    high_contrast_colors <- c(
      "#FF0000", "#0000FF", "#00CC00", "#9900CC", "#FF6600", 
      "#FFCC00", "#663300", "#FF3399", "#666666", "#00CCCC", "#FF9933"
    )
    
    n_groups <- length(unique(umap_data$group))
    if(n_groups > length(high_contrast_colors)) {
      colors <- colorRampPalette(high_contrast_colors)(n_groups)
    } else {
      colors <- high_contrast_colors[1:n_groups]
    }
  }
  
  # 创建基础图层
  p <- ggplot(umap_data, aes(x = umap_1, y = umap_2, color = group)) +
    geom_point(size = pt_size, alpha = alpha, stroke = 0) +
    scale_color_manual(values = colors) +
    theme_void() +
    theme(
      aspect.ratio = 1,
      legend.position = "right",
      plot.background = element_rect(fill = "white", color = NA),
      panel.background = element_rect(fill = "white", color = NA),
      legend.text = element_text(size = 10),
      legend.title = element_text(size = 12, face = "bold"),
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
    ) +
    coord_fixed() +
    labs(color = "Cell Type")
  
  # 添加标签（可选）
  if(label) {
    label_data <- umap_data %>%
      group_by(group) %>%
      summarise(
        x_coord = median(umap_1),
        y_coord = median(umap_2),
        .groups = 'drop'
      )
    
    p <- p + 
      geom_text(data = label_data, 
               aes(x = x_coord, y = y_coord, label = group),
               color = "black", size = 4, fontface = "bold",
               inherit.aes = FALSE)
  }
  
  return(p)
}

# t-SNE绘图函数
plot_modern_tsne <- function(seurat_obj, group_by = "seurat_clusters", 
                           pt_size = 0.5, alpha = 1.0, 
                           colors = NULL, label = TRUE, 
                           downsample = FALSE, max_cells = 10000) {
  
  # 提取t-SNE坐标
  tsne_data <- as.data.frame(seurat_obj[["tsne"]]@cell.embeddings)
  # 添加分组信息
  tsne_data$group <- seurat_obj@meta.data[[group_by]]
  
  # 可选的下采样
  if(downsample && nrow(tsne_data) > max_cells) {
    set.seed(42)
    cells_per_group <- table(tsne_data$group)
    downsample_data <- data.frame()
    
    for(g in unique(tsne_data$group)) {
      group_data <- tsne_data[tsne_data$group == g,]
      sample_size <- min(cells_per_group[g], max_cells/length(unique(tsne_data$group)))
      if(nrow(group_data) > sample_size) {
        group_data <- group_data[sample(nrow(group_data), sample_size),]
      }
      downsample_data <- rbind(downsample_data, group_data)
    }
    tsne_data <- downsample_data
  }
  
  # 如果没有指定颜色，使用默认配色方案
  if(is.null(colors)) {
    high_contrast_colors <- c(
      "#FF0000", "#0000FF", "#00CC00", "#9900CC", "#FF6600", 
      "#FFCC00", "#663300", "#FF3399", "#666666", "#00CCCC", "#FF9933"
    )
    
    n_groups <- length(unique(tsne_data$group))
    if(n_groups > length(high_contrast_colors)) {
      colors <- colorRampPalette(high_contrast_colors)(n_groups)
    } else {
      colors <- high_contrast_colors[1:n_groups]
    }
  }
  
  # 创建基础图层
  p <- ggplot(tsne_data, aes(x = tSNE_1, y = tSNE_2, color = group)) +
    geom_point(size = pt_size, alpha = alpha, stroke = 0) +
    scale_color_manual(values = colors) +
    theme_void() +
    theme(
      aspect.ratio = 1,
      legend.position = "right",
      plot.background = element_rect(fill = "white", color = NA),
      panel.background = element_rect(fill = "white", color = NA),
      legend.text = element_text(size = 10),
      legend.title = element_text(size = 12, face = "bold"),
      plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
    ) +
    coord_fixed() +
    labs(color = "Cell Type")
  
  # 添加标签（可选）
  if(label) {
    label_data <- tsne_data %>%
      group_by(group) %>%
      summarise(
        x_coord = median(tSNE_1),
        y_coord = median(tSNE_2),
        .groups = 'drop'
      )
    
    p <- p + 
      geom_text(data = label_data, 
               aes(x = x_coord, y = y_coord, label = group),
               color = "black", size = 4, fontface = "bold",
               inherit.aes = FALSE)
  }
  
  return(p)
}

# =============================================
# 设置高质量可视化参数
# =============================================

# 自定义颜色方案 - 从图片中提取的颜色
custom_colors <- c(
  "CD8 cells" = "#ef3f33",       # 红色
  "CD4 cells" = "#2f5885",       # 深蓝色
  "B cells" = "#26a870",         # 绿色
  "Plasma cells" = "#895da7",    # 紫色
  "NK cells" = "#3c9dd7",        # 天蓝色
  "DC cells" = "#00a18a",        # 青绿色
  "Macrophages" = "#f69886",     # 浅红色/粉橙色
  "Neutrophils" = "#d984b7",     # 粉紫色
  "Fibroblasts" = "#fdc182",     # 浅橙色
  "Endothelial cells" = "#a8d490", # 浅绿色
  "Epithelial cells" = "#d4c1ee"   # 浅紫色
)

# 创建输出目录
dir.create("高质量图像输出", showWarnings = FALSE)

# =============================================
# 生成t-SNE图（如果需要计算）
# =============================================

if(!"tsne" %in% names(rna_data@reductions)) {
  print("计算t-SNE降维...")
  rna_data <- RunTSNE(rna_data, dims = 1:30, perplexity = 30)
  print("t-SNE计算完成")
} else {
  print("使用已有的t-SNE结果")
}

# =============================================
# 生成UMAP可视化图像
# =============================================

# 带标签的UMAP图
print("绘制带标签的UMAP图...")
p1 <- plot_modern_umap(rna_data, group_by = "celltype_new", 
                      colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                      label = TRUE) +
      ggtitle("Cell Type Distribution (UMAP)")

# 保存高分辨率PNG和PDF
ggsave("高质量图像输出/UMAP_labeled.png", p1, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/UMAP_labeled.pdf", p1, width = 12, height = 10)

# 不带标签的UMAP图
print("绘制不带标签的UMAP图...")
p2 <- plot_modern_umap(rna_data, group_by = "celltype_new", 
                      colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                      label = FALSE) +
      ggtitle("Cell Type Distribution (UMAP)")

ggsave("高质量图像输出/UMAP_unlabeled.png", p2, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/UMAP_unlabeled.pdf", p2, width = 12, height = 10)

# 下采样版本的UMAP图
print("绘制下采样版UMAP图...")
p3 <- plot_modern_umap(rna_data, group_by = "celltype_new", 
                      colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                      label = TRUE, downsample = TRUE, max_cells = 22000) +
      ggtitle("Cell Type Distribution (UMAP) - Downsampled")

ggsave("高质量图像输出/UMAP_downsampled.png", p3, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/UMAP_downsampled.pdf", p3, width = 12, height = 10)

# =============================================
# 生成t-SNE可视化图像
# =============================================

# 带标签的t-SNE图
print("绘制带标签的t-SNE图...")
p1_tsne <- plot_modern_tsne(rna_data, group_by = "celltype_new", 
                          colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                          label = TRUE) +
          ggtitle("Cell Type Distribution (t-SNE)")

ggsave("高质量图像输出/tSNE_labeled.png", p1_tsne, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/tSNE_labeled.pdf", p1_tsne, width = 12, height = 10)

# 不带标签的t-SNE图
print("绘制不带标签的t-SNE图...")
p2_tsne <- plot_modern_tsne(rna_data, group_by = "celltype_new", 
                          colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                          label = FALSE) +
          ggtitle("Cell Type Distribution (t-SNE)")

ggsave("高质量图像输出/tSNE_unlabeled.png", p2_tsne, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/tSNE_unlabeled.pdf", p2_tsne, width = 12, height = 10)

# 下采样版本的t-SNE图
print("绘制下采样版t-SNE图...")
p3_tsne <- plot_modern_tsne(rna_data, group_by = "celltype_new", 
                          colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                          label = TRUE, downsample = TRUE, max_cells = 22000) +
          ggtitle("Cell Type Distribution (t-SNE) - Downsampled")

ggsave("高质量图像输出/tSNE_downsampled.png", p3_tsne, width = 12, height = 10, dpi = 600)
ggsave("高质量图像输出/tSNE_downsampled.pdf", p3_tsne, width = 12, height = 10)

# =============================================
# 创建UMAP和t-SNE比较图
# =============================================

# 加载patchwork包进行图像组合
if(requireNamespace("patchwork", quietly = TRUE) || install.packages("patchwork")) {
  library(patchwork)
  
  print("创建UMAP和t-SNE比较图...")
  # 创建UMAP图和t-SNE图用于并排比较
  umap_plot <- plot_modern_umap(rna_data, group_by = "celltype_new", 
                              colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                              label = FALSE, downsample = TRUE, max_cells = 20000) +
              ggtitle("UMAP") +
              theme(legend.position = "none")
  
  tsne_plot <- plot_modern_tsne(rna_data, group_by = "celltype_new", 
                              colors = custom_colors, pt_size = 0.7, alpha = 1.0,
                              label = FALSE, downsample = TRUE, max_cells = 20000) +
              ggtitle("t-SNE")
  
  # 组合图像并共享图例
  combined_plot <- umap_plot + tsne_plot + plot_layout(ncol = 2)
  
  # 保存高分辨率比较图
  ggsave("高质量图像输出/UMAP_tSNE_comparison.png", combined_plot, width = 18, height = 8, dpi = 600)
  ggsave("高质量图像输出/UMAP_tSNE_comparison.pdf", combined_plot, width = 18, height = 8)
}

print("所有图像已保存在'高质量图像输出'文件夹中")
